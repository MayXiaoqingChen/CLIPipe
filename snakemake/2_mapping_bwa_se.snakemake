include: './0_common.snakemake'

output_dir = config.get("output_dir")

def get_all_inputs(wildcards):
    available_inputs = dict(
        novoalign_mapping_file=expand('{output_dir}/mapping_bwa/{sample_id}.sam.gz',output_dir=output_dir, sample_id=sample_ids),
    )
    enabled_inputs = list(available_inputs.keys())
    inputs = []
    for key, l in available_inputs.items():
        if key in enabled_inputs:
            inputs += l
    return inputs

rule all:
    input:
        get_all_inputs

###------------------------The output section---------------------------###

rule bwa_aln:
    input:
        fastq='{output_dir}/pre_process/{sample_id}.clipped.filtered.collapsed.trimmed.fa'
    output:
        sai_file='{output_dir}/mapping_bwa/{sample_id}.sai'
    params:
        reference_fasta=config.get('reference_dir') + config.get('species') + '/bwa_index/' + config.get('species')
    threads: 
        config.get('threads_mapping')
    log:
        '{output_dir}/log/mapping_bwa/bwa_aln/{sample_id}.log'
    shell:
        '''bwa aln \
            -t {threads}\
            -n 0.06 \
            -q 20 \
            {params.reference_fasta} {input.fastq} > {output.sai_file}
        '''

rule bwa_samse:
    input:
        sai_file='{output_dir}/mapping_bwa/{sample_id}.sai',
        fastq='{output_dir}/pre_process/{sample_id}.clipped.filtered.collapsed.trimmed.fa'
    output:
        sam_file='{output_dir}/mapping_bwa/{sample_id}.sam.gz'
    params:
        reference_fasta=config.get('reference_dir') + config.get('species') + '/bwa_index/' + config.get('species')  
    threads:
        config.get('threads_compress')
    log:
        '{output_dir}/log/mapping_bwa/bwa_samse/{sample_id}.log'
    shell:
        '''bwa samse {params.reference_fasta} {input.sai_file} {input.fastq} | gzip -c > {output.sam_file}
        '''
